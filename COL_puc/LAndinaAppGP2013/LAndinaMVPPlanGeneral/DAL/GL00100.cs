
/*
'===============================================================================
'  Generated From - CSharp_dOOdads_BusinessEntity.vbgen
' 
'  ** IMPORTANT  ** 
'  How to Generate your stored procedures:
' 
'  SQL        = SQL_StoredProcs.vbgen
'  ACCESS     = Access_StoredProcs.vbgen
'  ORACLE     = Oracle_StoredProcs.vbgen
'  FIREBIRD   = FirebirdStoredProcs.vbgen
'  POSTGRESQL = PostgreSQL_StoredProcs.vbgen
'
'  The supporting base class SqlClientEntity is in the Architecture directory in "dOOdads".
'  
'  This object is 'abstract' which means you need to inherit from it to be able
'  to instantiate it.  This is very easilly done. You can override properties and
'  methods in your derived class, this allows you to regenerate this class at any
'  time and not worry about overwriting custom code. 
'
'  NEVER EDIT THIS FILE.
'
'  public class YourObject :  _YourObject
'  {
'
'  }
'
'===============================================================================
*/

// Generated by MyGeneration Version # (1.3.0.3)

using System;
using System.Data;
using System.Data.SqlClient;
using System.Collections;
using System.Collections.Specialized;

using MyGeneration.dOOdads;

namespace MVP.gpCustom
{
	public abstract class _GL00100 : SqlClientEntity
	{
		public _GL00100()
		{
			this.QuerySource = "GL00100";
			this.MappingName = "GL00100";

		}	

		//=================================================================
		//  public Overrides void AddNew()
		//=================================================================
		//
		//=================================================================
		public override void AddNew()
		{
			base.AddNew();
			
		}
		
		
		public override void FlushData()
		{
			this._whereClause = null;
			this._aggregateClause = null;
			base.FlushData();
		}
		
		//=================================================================
		//  	public Function LoadAll() As Boolean
		//=================================================================
		//  Loads all of the records in the database, and sets the currentRow to the first row
		//=================================================================
		public bool LoadAll() 
		{
			ListDictionary parameters = null;
			
			return base.LoadFromSql("[" + this.SchemaStoredProcedure + "proc_GL00100LoadAll]", parameters);
		}
	
		//=================================================================
		// public Overridable Function LoadByPrimaryKey()  As Boolean
		//=================================================================
		//  Loads a single row of via the primary key
		//=================================================================
		public virtual bool LoadByPrimaryKey(int ACTINDX)
		{
			ListDictionary parameters = new ListDictionary();
			parameters.Add(Parameters.ACTINDX, ACTINDX);

		
			return base.LoadFromSql("[" + this.SchemaStoredProcedure + "proc_GL00100LoadByPrimaryKey]", parameters);
		}
		
		#region Parameters
		protected class Parameters
		{
			
			public static SqlParameter ACTINDX
			{
				get
				{
					return new SqlParameter("@ACTINDX", SqlDbType.Int, 0);
				}
			}
			
			public static SqlParameter ACTNUMBR_1
			{
				get
				{
					return new SqlParameter("@ACTNUMBR_1", SqlDbType.Char, 9);
				}
			}
			
			public static SqlParameter ACTNUMBR_2
			{
				get
				{
					return new SqlParameter("@ACTNUMBR_2", SqlDbType.Char, 9);
				}
			}
			
			public static SqlParameter ACTNUMBR_3
			{
				get
				{
					return new SqlParameter("@ACTNUMBR_3", SqlDbType.Char, 9);
				}
			}
			
			public static SqlParameter ACTNUMBR_4
			{
				get
				{
					return new SqlParameter("@ACTNUMBR_4", SqlDbType.Char, 9);
				}
			}
			
			public static SqlParameter ACTNUMBR_5
			{
				get
				{
					return new SqlParameter("@ACTNUMBR_5", SqlDbType.Char, 9);
				}
			}
			
			public static SqlParameter ACTNUMBR_6
			{
				get
				{
					return new SqlParameter("@ACTNUMBR_6", SqlDbType.Char, 9);
				}
			}
			
			public static SqlParameter ACTALIAS
			{
				get
				{
					return new SqlParameter("@ACTALIAS", SqlDbType.Char, 21);
				}
			}
			
			public static SqlParameter MNACSGMT
			{
				get
				{
					return new SqlParameter("@MNACSGMT", SqlDbType.Char, 67);
				}
			}
			
			public static SqlParameter ACCTTYPE
			{
				get
				{
					return new SqlParameter("@ACCTTYPE", SqlDbType.SmallInt, 0);
				}
			}
			
			public static SqlParameter ACTDESCR
			{
				get
				{
					return new SqlParameter("@ACTDESCR", SqlDbType.Char, 51);
				}
			}
			
			public static SqlParameter PSTNGTYP
			{
				get
				{
					return new SqlParameter("@PSTNGTYP", SqlDbType.SmallInt, 0);
				}
			}
			
			public static SqlParameter ACCATNUM
			{
				get
				{
					return new SqlParameter("@ACCATNUM", SqlDbType.SmallInt, 0);
				}
			}
			
			public static SqlParameter ACTIVE
			{
				get
				{
					return new SqlParameter("@ACTIVE", SqlDbType.TinyInt, 0);
				}
			}
			
			public static SqlParameter TPCLBLNC
			{
				get
				{
					return new SqlParameter("@TPCLBLNC", SqlDbType.SmallInt, 0);
				}
			}
			
			public static SqlParameter DECPLACS
			{
				get
				{
					return new SqlParameter("@DECPLACS", SqlDbType.SmallInt, 0);
				}
			}
			
			public static SqlParameter FXDORVAR
			{
				get
				{
					return new SqlParameter("@FXDORVAR", SqlDbType.SmallInt, 0);
				}
			}
			
			public static SqlParameter BALFRCLC
			{
				get
				{
					return new SqlParameter("@BALFRCLC", SqlDbType.SmallInt, 0);
				}
			}
			
			public static SqlParameter DSPLKUPS
			{
				get
				{
					return new SqlParameter("@DSPLKUPS", SqlDbType.Binary, 4);
				}
			}
			
			public static SqlParameter CNVRMTHD
			{
				get
				{
					return new SqlParameter("@CNVRMTHD", SqlDbType.SmallInt, 0);
				}
			}
			
			public static SqlParameter HSTRCLRT
			{
				get
				{
					return new SqlParameter("@HSTRCLRT", SqlDbType.Decimal, 0);
				}
			}
			
			public static SqlParameter NOTEINDX
			{
				get
				{
					return new SqlParameter("@NOTEINDX", SqlDbType.Decimal, 0);
				}
			}
			
			public static SqlParameter CREATDDT
			{
				get
				{
					return new SqlParameter("@CREATDDT", SqlDbType.DateTime, 0);
				}
			}
			
			public static SqlParameter MODIFDT
			{
				get
				{
					return new SqlParameter("@MODIFDT", SqlDbType.DateTime, 0);
				}
			}
			
			public static SqlParameter USERDEF1
			{
				get
				{
					return new SqlParameter("@USERDEF1", SqlDbType.Char, 21);
				}
			}
			
			public static SqlParameter USERDEF2
			{
				get
				{
					return new SqlParameter("@USERDEF2", SqlDbType.Char, 21);
				}
			}
			
			public static SqlParameter PostSlsIn
			{
				get
				{
					return new SqlParameter("@PostSlsIn", SqlDbType.SmallInt, 0);
				}
			}
			
			public static SqlParameter PostIvIn
			{
				get
				{
					return new SqlParameter("@PostIvIn", SqlDbType.SmallInt, 0);
				}
			}
			
			public static SqlParameter PostPurchIn
			{
				get
				{
					return new SqlParameter("@PostPurchIn", SqlDbType.SmallInt, 0);
				}
			}
			
			public static SqlParameter PostPRIn
			{
				get
				{
					return new SqlParameter("@PostPRIn", SqlDbType.SmallInt, 0);
				}
			}
			
			public static SqlParameter ADJINFL
			{
				get
				{
					return new SqlParameter("@ADJINFL", SqlDbType.TinyInt, 0);
				}
			}
			
			public static SqlParameter INFLAREV
			{
				get
				{
					return new SqlParameter("@INFLAREV", SqlDbType.Int, 0);
				}
			}
			
			public static SqlParameter INFLAEQU
			{
				get
				{
					return new SqlParameter("@INFLAEQU", SqlDbType.Int, 0);
				}
			}
			
			public static SqlParameter ACCTENTR
			{
				get
				{
					return new SqlParameter("@ACCTENTR", SqlDbType.TinyInt, 0);
				}
			}
			
			public static SqlParameter USRDEFS1
			{
				get
				{
					return new SqlParameter("@USRDEFS1", SqlDbType.Char, 31);
				}
			}
			
			public static SqlParameter USRDEFS2
			{
				get
				{
					return new SqlParameter("@USRDEFS2", SqlDbType.Char, 31);
				}
			}
			
			public static SqlParameter DEX_ROW_TS
			{
				get
				{
					return new SqlParameter("@DEX_ROW_TS", SqlDbType.DateTime, 0);
				}
			}
			
			public static SqlParameter DEX_ROW_ID
			{
				get
				{
					return new SqlParameter("@DEX_ROW_ID", SqlDbType.Int, 0);
				}
			}
			
		}
		#endregion		
	
		#region ColumnNames
		public class ColumnNames
		{  
            public const string ACTINDX = "ACTINDX";
            public const string ACTNUMBR_1 = "ACTNUMBR_1";
            public const string ACTNUMBR_2 = "ACTNUMBR_2";
            public const string ACTNUMBR_3 = "ACTNUMBR_3";
            public const string ACTNUMBR_4 = "ACTNUMBR_4";
            public const string ACTNUMBR_5 = "ACTNUMBR_5";
            public const string ACTNUMBR_6 = "ACTNUMBR_6";
            public const string ACTALIAS = "ACTALIAS";
            public const string MNACSGMT = "MNACSGMT";
            public const string ACCTTYPE = "ACCTTYPE";
            public const string ACTDESCR = "ACTDESCR";
            public const string PSTNGTYP = "PSTNGTYP";
            public const string ACCATNUM = "ACCATNUM";
            public const string ACTIVE = "ACTIVE";
            public const string TPCLBLNC = "TPCLBLNC";
            public const string DECPLACS = "DECPLACS";
            public const string FXDORVAR = "FXDORVAR";
            public const string BALFRCLC = "BALFRCLC";
            public const string DSPLKUPS = "DSPLKUPS";
            public const string CNVRMTHD = "CNVRMTHD";
            public const string HSTRCLRT = "HSTRCLRT";
            public const string NOTEINDX = "NOTEINDX";
            public const string CREATDDT = "CREATDDT";
            public const string MODIFDT = "MODIFDT";
            public const string USERDEF1 = "USERDEF1";
            public const string USERDEF2 = "USERDEF2";
            public const string PostSlsIn = "PostSlsIn";
            public const string PostIvIn = "PostIvIn";
            public const string PostPurchIn = "PostPurchIn";
            public const string PostPRIn = "PostPRIn";
            public const string ADJINFL = "ADJINFL";
            public const string INFLAREV = "INFLAREV";
            public const string INFLAEQU = "INFLAEQU";
            public const string ACCTENTR = "ACCTENTR";
            public const string USRDEFS1 = "USRDEFS1";
            public const string USRDEFS2 = "USRDEFS2";
            public const string DEX_ROW_TS = "DEX_ROW_TS";
            public const string DEX_ROW_ID = "DEX_ROW_ID";

			static public string ToPropertyName(string columnName)
			{
				if(ht == null)
				{
					ht = new Hashtable();
					
					ht[ACTINDX] = _GL00100.PropertyNames.ACTINDX;
					ht[ACTNUMBR_1] = _GL00100.PropertyNames.ACTNUMBR_1;
					ht[ACTNUMBR_2] = _GL00100.PropertyNames.ACTNUMBR_2;
					ht[ACTNUMBR_3] = _GL00100.PropertyNames.ACTNUMBR_3;
					ht[ACTNUMBR_4] = _GL00100.PropertyNames.ACTNUMBR_4;
					ht[ACTNUMBR_5] = _GL00100.PropertyNames.ACTNUMBR_5;
					ht[ACTNUMBR_6] = _GL00100.PropertyNames.ACTNUMBR_6;
					ht[ACTALIAS] = _GL00100.PropertyNames.ACTALIAS;
					ht[MNACSGMT] = _GL00100.PropertyNames.MNACSGMT;
					ht[ACCTTYPE] = _GL00100.PropertyNames.ACCTTYPE;
					ht[ACTDESCR] = _GL00100.PropertyNames.ACTDESCR;
					ht[PSTNGTYP] = _GL00100.PropertyNames.PSTNGTYP;
					ht[ACCATNUM] = _GL00100.PropertyNames.ACCATNUM;
					ht[ACTIVE] = _GL00100.PropertyNames.ACTIVE;
					ht[TPCLBLNC] = _GL00100.PropertyNames.TPCLBLNC;
					ht[DECPLACS] = _GL00100.PropertyNames.DECPLACS;
					ht[FXDORVAR] = _GL00100.PropertyNames.FXDORVAR;
					ht[BALFRCLC] = _GL00100.PropertyNames.BALFRCLC;
					ht[DSPLKUPS] = _GL00100.PropertyNames.DSPLKUPS;
					ht[CNVRMTHD] = _GL00100.PropertyNames.CNVRMTHD;
					ht[HSTRCLRT] = _GL00100.PropertyNames.HSTRCLRT;
					ht[NOTEINDX] = _GL00100.PropertyNames.NOTEINDX;
					ht[CREATDDT] = _GL00100.PropertyNames.CREATDDT;
					ht[MODIFDT] = _GL00100.PropertyNames.MODIFDT;
					ht[USERDEF1] = _GL00100.PropertyNames.USERDEF1;
					ht[USERDEF2] = _GL00100.PropertyNames.USERDEF2;
					ht[PostSlsIn] = _GL00100.PropertyNames.PostSlsIn;
					ht[PostIvIn] = _GL00100.PropertyNames.PostIvIn;
					ht[PostPurchIn] = _GL00100.PropertyNames.PostPurchIn;
					ht[PostPRIn] = _GL00100.PropertyNames.PostPRIn;
					ht[ADJINFL] = _GL00100.PropertyNames.ADJINFL;
					ht[INFLAREV] = _GL00100.PropertyNames.INFLAREV;
					ht[INFLAEQU] = _GL00100.PropertyNames.INFLAEQU;
					ht[ACCTENTR] = _GL00100.PropertyNames.ACCTENTR;
					ht[USRDEFS1] = _GL00100.PropertyNames.USRDEFS1;
					ht[USRDEFS2] = _GL00100.PropertyNames.USRDEFS2;
					ht[DEX_ROW_TS] = _GL00100.PropertyNames.DEX_ROW_TS;
					ht[DEX_ROW_ID] = _GL00100.PropertyNames.DEX_ROW_ID;

				}
				return (string)ht[columnName];
			}

			static private Hashtable ht = null;			 
		}
		#endregion
		
		#region PropertyNames
		public class PropertyNames
		{  
            public const string ACTINDX = "ACTINDX";
            public const string ACTNUMBR_1 = "ACTNUMBR_1";
            public const string ACTNUMBR_2 = "ACTNUMBR_2";
            public const string ACTNUMBR_3 = "ACTNUMBR_3";
            public const string ACTNUMBR_4 = "ACTNUMBR_4";
            public const string ACTNUMBR_5 = "ACTNUMBR_5";
            public const string ACTNUMBR_6 = "ACTNUMBR_6";
            public const string ACTALIAS = "ACTALIAS";
            public const string MNACSGMT = "MNACSGMT";
            public const string ACCTTYPE = "ACCTTYPE";
            public const string ACTDESCR = "ACTDESCR";
            public const string PSTNGTYP = "PSTNGTYP";
            public const string ACCATNUM = "ACCATNUM";
            public const string ACTIVE = "ACTIVE";
            public const string TPCLBLNC = "TPCLBLNC";
            public const string DECPLACS = "DECPLACS";
            public const string FXDORVAR = "FXDORVAR";
            public const string BALFRCLC = "BALFRCLC";
            public const string DSPLKUPS = "DSPLKUPS";
            public const string CNVRMTHD = "CNVRMTHD";
            public const string HSTRCLRT = "HSTRCLRT";
            public const string NOTEINDX = "NOTEINDX";
            public const string CREATDDT = "CREATDDT";
            public const string MODIFDT = "MODIFDT";
            public const string USERDEF1 = "USERDEF1";
            public const string USERDEF2 = "USERDEF2";
            public const string PostSlsIn = "PostSlsIn";
            public const string PostIvIn = "PostIvIn";
            public const string PostPurchIn = "PostPurchIn";
            public const string PostPRIn = "PostPRIn";
            public const string ADJINFL = "ADJINFL";
            public const string INFLAREV = "INFLAREV";
            public const string INFLAEQU = "INFLAEQU";
            public const string ACCTENTR = "ACCTENTR";
            public const string USRDEFS1 = "USRDEFS1";
            public const string USRDEFS2 = "USRDEFS2";
            public const string DEX_ROW_TS = "DEX_ROW_TS";
            public const string DEX_ROW_ID = "DEX_ROW_ID";

			static public string ToColumnName(string propertyName)
			{
				if(ht == null)
				{
					ht = new Hashtable();
					
					ht[ACTINDX] = _GL00100.ColumnNames.ACTINDX;
					ht[ACTNUMBR_1] = _GL00100.ColumnNames.ACTNUMBR_1;
					ht[ACTNUMBR_2] = _GL00100.ColumnNames.ACTNUMBR_2;
					ht[ACTNUMBR_3] = _GL00100.ColumnNames.ACTNUMBR_3;
					ht[ACTNUMBR_4] = _GL00100.ColumnNames.ACTNUMBR_4;
					ht[ACTNUMBR_5] = _GL00100.ColumnNames.ACTNUMBR_5;
					ht[ACTNUMBR_6] = _GL00100.ColumnNames.ACTNUMBR_6;
					ht[ACTALIAS] = _GL00100.ColumnNames.ACTALIAS;
					ht[MNACSGMT] = _GL00100.ColumnNames.MNACSGMT;
					ht[ACCTTYPE] = _GL00100.ColumnNames.ACCTTYPE;
					ht[ACTDESCR] = _GL00100.ColumnNames.ACTDESCR;
					ht[PSTNGTYP] = _GL00100.ColumnNames.PSTNGTYP;
					ht[ACCATNUM] = _GL00100.ColumnNames.ACCATNUM;
					ht[ACTIVE] = _GL00100.ColumnNames.ACTIVE;
					ht[TPCLBLNC] = _GL00100.ColumnNames.TPCLBLNC;
					ht[DECPLACS] = _GL00100.ColumnNames.DECPLACS;
					ht[FXDORVAR] = _GL00100.ColumnNames.FXDORVAR;
					ht[BALFRCLC] = _GL00100.ColumnNames.BALFRCLC;
					ht[DSPLKUPS] = _GL00100.ColumnNames.DSPLKUPS;
					ht[CNVRMTHD] = _GL00100.ColumnNames.CNVRMTHD;
					ht[HSTRCLRT] = _GL00100.ColumnNames.HSTRCLRT;
					ht[NOTEINDX] = _GL00100.ColumnNames.NOTEINDX;
					ht[CREATDDT] = _GL00100.ColumnNames.CREATDDT;
					ht[MODIFDT] = _GL00100.ColumnNames.MODIFDT;
					ht[USERDEF1] = _GL00100.ColumnNames.USERDEF1;
					ht[USERDEF2] = _GL00100.ColumnNames.USERDEF2;
					ht[PostSlsIn] = _GL00100.ColumnNames.PostSlsIn;
					ht[PostIvIn] = _GL00100.ColumnNames.PostIvIn;
					ht[PostPurchIn] = _GL00100.ColumnNames.PostPurchIn;
					ht[PostPRIn] = _GL00100.ColumnNames.PostPRIn;
					ht[ADJINFL] = _GL00100.ColumnNames.ADJINFL;
					ht[INFLAREV] = _GL00100.ColumnNames.INFLAREV;
					ht[INFLAEQU] = _GL00100.ColumnNames.INFLAEQU;
					ht[ACCTENTR] = _GL00100.ColumnNames.ACCTENTR;
					ht[USRDEFS1] = _GL00100.ColumnNames.USRDEFS1;
					ht[USRDEFS2] = _GL00100.ColumnNames.USRDEFS2;
					ht[DEX_ROW_TS] = _GL00100.ColumnNames.DEX_ROW_TS;
					ht[DEX_ROW_ID] = _GL00100.ColumnNames.DEX_ROW_ID;

				}
				return (string)ht[propertyName];
			}

			static private Hashtable ht = null;			 
		}			 
		#endregion	

		#region StringPropertyNames
		public class StringPropertyNames
		{  
            public const string ACTINDX = "s_ACTINDX";
            public const string ACTNUMBR_1 = "s_ACTNUMBR_1";
            public const string ACTNUMBR_2 = "s_ACTNUMBR_2";
            public const string ACTNUMBR_3 = "s_ACTNUMBR_3";
            public const string ACTNUMBR_4 = "s_ACTNUMBR_4";
            public const string ACTNUMBR_5 = "s_ACTNUMBR_5";
            public const string ACTNUMBR_6 = "s_ACTNUMBR_6";
            public const string ACTALIAS = "s_ACTALIAS";
            public const string MNACSGMT = "s_MNACSGMT";
            public const string ACCTTYPE = "s_ACCTTYPE";
            public const string ACTDESCR = "s_ACTDESCR";
            public const string PSTNGTYP = "s_PSTNGTYP";
            public const string ACCATNUM = "s_ACCATNUM";
            public const string ACTIVE = "s_ACTIVE";
            public const string TPCLBLNC = "s_TPCLBLNC";
            public const string DECPLACS = "s_DECPLACS";
            public const string FXDORVAR = "s_FXDORVAR";
            public const string BALFRCLC = "s_BALFRCLC";
            public const string DSPLKUPS = "s_DSPLKUPS";
            public const string CNVRMTHD = "s_CNVRMTHD";
            public const string HSTRCLRT = "s_HSTRCLRT";
            public const string NOTEINDX = "s_NOTEINDX";
            public const string CREATDDT = "s_CREATDDT";
            public const string MODIFDT = "s_MODIFDT";
            public const string USERDEF1 = "s_USERDEF1";
            public const string USERDEF2 = "s_USERDEF2";
            public const string PostSlsIn = "s_PostSlsIn";
            public const string PostIvIn = "s_PostIvIn";
            public const string PostPurchIn = "s_PostPurchIn";
            public const string PostPRIn = "s_PostPRIn";
            public const string ADJINFL = "s_ADJINFL";
            public const string INFLAREV = "s_INFLAREV";
            public const string INFLAEQU = "s_INFLAEQU";
            public const string ACCTENTR = "s_ACCTENTR";
            public const string USRDEFS1 = "s_USRDEFS1";
            public const string USRDEFS2 = "s_USRDEFS2";
            public const string DEX_ROW_TS = "s_DEX_ROW_TS";
            public const string DEX_ROW_ID = "s_DEX_ROW_ID";

		}
		#endregion		
		
		#region Properties
	
		public virtual int ACTINDX
	    {
			get
	        {
				return base.Getint(ColumnNames.ACTINDX);
			}
			set
	        {
				base.Setint(ColumnNames.ACTINDX, value);
			}
		}

		public virtual string ACTNUMBR_1
	    {
			get
	        {
				return base.Getstring(ColumnNames.ACTNUMBR_1);
			}
			set
	        {
				base.Setstring(ColumnNames.ACTNUMBR_1, value);
			}
		}

		public virtual string ACTNUMBR_2
	    {
			get
	        {
				return base.Getstring(ColumnNames.ACTNUMBR_2);
			}
			set
	        {
				base.Setstring(ColumnNames.ACTNUMBR_2, value);
			}
		}

		public virtual string ACTNUMBR_3
	    {
			get
	        {
				return base.Getstring(ColumnNames.ACTNUMBR_3);
			}
			set
	        {
				base.Setstring(ColumnNames.ACTNUMBR_3, value);
			}
		}

		public virtual string ACTNUMBR_4
	    {
			get
	        {
				return base.Getstring(ColumnNames.ACTNUMBR_4);
			}
			set
	        {
				base.Setstring(ColumnNames.ACTNUMBR_4, value);
			}
		}

		public virtual string ACTNUMBR_5
	    {
			get
	        {
				return base.Getstring(ColumnNames.ACTNUMBR_5);
			}
			set
	        {
				base.Setstring(ColumnNames.ACTNUMBR_5, value);
			}
		}

		public virtual string ACTNUMBR_6
	    {
			get
	        {
				return base.Getstring(ColumnNames.ACTNUMBR_6);
			}
			set
	        {
				base.Setstring(ColumnNames.ACTNUMBR_6, value);
			}
		}

		public virtual string ACTALIAS
	    {
			get
	        {
				return base.Getstring(ColumnNames.ACTALIAS);
			}
			set
	        {
				base.Setstring(ColumnNames.ACTALIAS, value);
			}
		}

		public virtual string MNACSGMT
	    {
			get
	        {
				return base.Getstring(ColumnNames.MNACSGMT);
			}
			set
	        {
				base.Setstring(ColumnNames.MNACSGMT, value);
			}
		}

		public virtual short ACCTTYPE
	    {
			get
	        {
				return base.Getshort(ColumnNames.ACCTTYPE);
			}
			set
	        {
				base.Setshort(ColumnNames.ACCTTYPE, value);
			}
		}

		public virtual string ACTDESCR
	    {
			get
	        {
				return base.Getstring(ColumnNames.ACTDESCR);
			}
			set
	        {
				base.Setstring(ColumnNames.ACTDESCR, value);
			}
		}

		public virtual short PSTNGTYP
	    {
			get
	        {
				return base.Getshort(ColumnNames.PSTNGTYP);
			}
			set
	        {
				base.Setshort(ColumnNames.PSTNGTYP, value);
			}
		}

		public virtual short ACCATNUM
	    {
			get
	        {
				return base.Getshort(ColumnNames.ACCATNUM);
			}
			set
	        {
				base.Setshort(ColumnNames.ACCATNUM, value);
			}
		}

		public virtual byte ACTIVE
	    {
			get
	        {
				return base.Getbyte(ColumnNames.ACTIVE);
			}
			set
	        {
				base.Setbyte(ColumnNames.ACTIVE, value);
			}
		}

		public virtual short TPCLBLNC
	    {
			get
	        {
				return base.Getshort(ColumnNames.TPCLBLNC);
			}
			set
	        {
				base.Setshort(ColumnNames.TPCLBLNC, value);
			}
		}

		public virtual short DECPLACS
	    {
			get
	        {
				return base.Getshort(ColumnNames.DECPLACS);
			}
			set
	        {
				base.Setshort(ColumnNames.DECPLACS, value);
			}
		}

		public virtual short FXDORVAR
	    {
			get
	        {
				return base.Getshort(ColumnNames.FXDORVAR);
			}
			set
	        {
				base.Setshort(ColumnNames.FXDORVAR, value);
			}
		}

		public virtual short BALFRCLC
	    {
			get
	        {
				return base.Getshort(ColumnNames.BALFRCLC);
			}
			set
	        {
				base.Setshort(ColumnNames.BALFRCLC, value);
			}
		}

		public virtual object DSPLKUPS
	    {
			get
	        {
				return base.Getobject(ColumnNames.DSPLKUPS);
			}
			set
	        {
				base.Setobject(ColumnNames.DSPLKUPS, value);
			}
		}

		public virtual short CNVRMTHD
	    {
			get
	        {
				return base.Getshort(ColumnNames.CNVRMTHD);
			}
			set
	        {
				base.Setshort(ColumnNames.CNVRMTHD, value);
			}
		}

		public virtual decimal HSTRCLRT
	    {
			get
	        {
				return base.Getdecimal(ColumnNames.HSTRCLRT);
			}
			set
	        {
				base.Setdecimal(ColumnNames.HSTRCLRT, value);
			}
		}

		public virtual decimal NOTEINDX
	    {
			get
	        {
				return base.Getdecimal(ColumnNames.NOTEINDX);
			}
			set
	        {
				base.Setdecimal(ColumnNames.NOTEINDX, value);
			}
		}

		public virtual DateTime CREATDDT
	    {
			get
	        {
				return base.GetDateTime(ColumnNames.CREATDDT);
			}
			set
	        {
				base.SetDateTime(ColumnNames.CREATDDT, value);
			}
		}

		public virtual DateTime MODIFDT
	    {
			get
	        {
				return base.GetDateTime(ColumnNames.MODIFDT);
			}
			set
	        {
				base.SetDateTime(ColumnNames.MODIFDT, value);
			}
		}

		public virtual string USERDEF1
	    {
			get
	        {
				return base.Getstring(ColumnNames.USERDEF1);
			}
			set
	        {
				base.Setstring(ColumnNames.USERDEF1, value);
			}
		}

		public virtual string USERDEF2
	    {
			get
	        {
				return base.Getstring(ColumnNames.USERDEF2);
			}
			set
	        {
				base.Setstring(ColumnNames.USERDEF2, value);
			}
		}

		public virtual short PostSlsIn
	    {
			get
	        {
				return base.Getshort(ColumnNames.PostSlsIn);
			}
			set
	        {
				base.Setshort(ColumnNames.PostSlsIn, value);
			}
		}

		public virtual short PostIvIn
	    {
			get
	        {
				return base.Getshort(ColumnNames.PostIvIn);
			}
			set
	        {
				base.Setshort(ColumnNames.PostIvIn, value);
			}
		}

		public virtual short PostPurchIn
	    {
			get
	        {
				return base.Getshort(ColumnNames.PostPurchIn);
			}
			set
	        {
				base.Setshort(ColumnNames.PostPurchIn, value);
			}
		}

		public virtual short PostPRIn
	    {
			get
	        {
				return base.Getshort(ColumnNames.PostPRIn);
			}
			set
	        {
				base.Setshort(ColumnNames.PostPRIn, value);
			}
		}

		public virtual byte ADJINFL
	    {
			get
	        {
				return base.Getbyte(ColumnNames.ADJINFL);
			}
			set
	        {
				base.Setbyte(ColumnNames.ADJINFL, value);
			}
		}

		public virtual int INFLAREV
	    {
			get
	        {
				return base.Getint(ColumnNames.INFLAREV);
			}
			set
	        {
				base.Setint(ColumnNames.INFLAREV, value);
			}
		}

		public virtual int INFLAEQU
	    {
			get
	        {
				return base.Getint(ColumnNames.INFLAEQU);
			}
			set
	        {
				base.Setint(ColumnNames.INFLAEQU, value);
			}
		}

		public virtual byte ACCTENTR
	    {
			get
	        {
				return base.Getbyte(ColumnNames.ACCTENTR);
			}
			set
	        {
				base.Setbyte(ColumnNames.ACCTENTR, value);
			}
		}

		public virtual string USRDEFS1
	    {
			get
	        {
				return base.Getstring(ColumnNames.USRDEFS1);
			}
			set
	        {
				base.Setstring(ColumnNames.USRDEFS1, value);
			}
		}

		public virtual string USRDEFS2
	    {
			get
	        {
				return base.Getstring(ColumnNames.USRDEFS2);
			}
			set
	        {
				base.Setstring(ColumnNames.USRDEFS2, value);
			}
		}

		public virtual DateTime DEX_ROW_TS
	    {
			get
	        {
				return base.GetDateTime(ColumnNames.DEX_ROW_TS);
			}
			set
	        {
				base.SetDateTime(ColumnNames.DEX_ROW_TS, value);
			}
		}

		public virtual int DEX_ROW_ID
	    {
			get
	        {
				return base.Getint(ColumnNames.DEX_ROW_ID);
			}
			set
	        {
				base.Setint(ColumnNames.DEX_ROW_ID, value);
			}
		}


		#endregion
		
		#region String Properties
	
		public virtual string s_ACTINDX
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.ACTINDX) ? string.Empty : base.GetintAsString(ColumnNames.ACTINDX);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.ACTINDX);
				else
					this.ACTINDX = base.SetintAsString(ColumnNames.ACTINDX, value);
			}
		}

		public virtual string s_ACTNUMBR_1
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.ACTNUMBR_1) ? string.Empty : base.GetstringAsString(ColumnNames.ACTNUMBR_1);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.ACTNUMBR_1);
				else
					this.ACTNUMBR_1 = base.SetstringAsString(ColumnNames.ACTNUMBR_1, value);
			}
		}

		public virtual string s_ACTNUMBR_2
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.ACTNUMBR_2) ? string.Empty : base.GetstringAsString(ColumnNames.ACTNUMBR_2);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.ACTNUMBR_2);
				else
					this.ACTNUMBR_2 = base.SetstringAsString(ColumnNames.ACTNUMBR_2, value);
			}
		}

		public virtual string s_ACTNUMBR_3
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.ACTNUMBR_3) ? string.Empty : base.GetstringAsString(ColumnNames.ACTNUMBR_3);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.ACTNUMBR_3);
				else
					this.ACTNUMBR_3 = base.SetstringAsString(ColumnNames.ACTNUMBR_3, value);
			}
		}

		public virtual string s_ACTNUMBR_4
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.ACTNUMBR_4) ? string.Empty : base.GetstringAsString(ColumnNames.ACTNUMBR_4);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.ACTNUMBR_4);
				else
					this.ACTNUMBR_4 = base.SetstringAsString(ColumnNames.ACTNUMBR_4, value);
			}
		}

		public virtual string s_ACTNUMBR_5
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.ACTNUMBR_5) ? string.Empty : base.GetstringAsString(ColumnNames.ACTNUMBR_5);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.ACTNUMBR_5);
				else
					this.ACTNUMBR_5 = base.SetstringAsString(ColumnNames.ACTNUMBR_5, value);
			}
		}

		public virtual string s_ACTNUMBR_6
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.ACTNUMBR_6) ? string.Empty : base.GetstringAsString(ColumnNames.ACTNUMBR_6);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.ACTNUMBR_6);
				else
					this.ACTNUMBR_6 = base.SetstringAsString(ColumnNames.ACTNUMBR_6, value);
			}
		}

		public virtual string s_ACTALIAS
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.ACTALIAS) ? string.Empty : base.GetstringAsString(ColumnNames.ACTALIAS);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.ACTALIAS);
				else
					this.ACTALIAS = base.SetstringAsString(ColumnNames.ACTALIAS, value);
			}
		}

		public virtual string s_MNACSGMT
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.MNACSGMT) ? string.Empty : base.GetstringAsString(ColumnNames.MNACSGMT);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.MNACSGMT);
				else
					this.MNACSGMT = base.SetstringAsString(ColumnNames.MNACSGMT, value);
			}
		}

		public virtual string s_ACCTTYPE
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.ACCTTYPE) ? string.Empty : base.GetshortAsString(ColumnNames.ACCTTYPE);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.ACCTTYPE);
				else
					this.ACCTTYPE = base.SetshortAsString(ColumnNames.ACCTTYPE, value);
			}
		}

		public virtual string s_ACTDESCR
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.ACTDESCR) ? string.Empty : base.GetstringAsString(ColumnNames.ACTDESCR);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.ACTDESCR);
				else
					this.ACTDESCR = base.SetstringAsString(ColumnNames.ACTDESCR, value);
			}
		}

		public virtual string s_PSTNGTYP
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.PSTNGTYP) ? string.Empty : base.GetshortAsString(ColumnNames.PSTNGTYP);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.PSTNGTYP);
				else
					this.PSTNGTYP = base.SetshortAsString(ColumnNames.PSTNGTYP, value);
			}
		}

		public virtual string s_ACCATNUM
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.ACCATNUM) ? string.Empty : base.GetshortAsString(ColumnNames.ACCATNUM);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.ACCATNUM);
				else
					this.ACCATNUM = base.SetshortAsString(ColumnNames.ACCATNUM, value);
			}
		}

		public virtual string s_ACTIVE
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.ACTIVE) ? string.Empty : base.GetbyteAsString(ColumnNames.ACTIVE);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.ACTIVE);
				else
					this.ACTIVE = base.SetbyteAsString(ColumnNames.ACTIVE, value);
			}
		}

		public virtual string s_TPCLBLNC
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.TPCLBLNC) ? string.Empty : base.GetshortAsString(ColumnNames.TPCLBLNC);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.TPCLBLNC);
				else
					this.TPCLBLNC = base.SetshortAsString(ColumnNames.TPCLBLNC, value);
			}
		}

		public virtual string s_DECPLACS
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.DECPLACS) ? string.Empty : base.GetshortAsString(ColumnNames.DECPLACS);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.DECPLACS);
				else
					this.DECPLACS = base.SetshortAsString(ColumnNames.DECPLACS, value);
			}
		}

		public virtual string s_FXDORVAR
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.FXDORVAR) ? string.Empty : base.GetshortAsString(ColumnNames.FXDORVAR);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.FXDORVAR);
				else
					this.FXDORVAR = base.SetshortAsString(ColumnNames.FXDORVAR, value);
			}
		}

		public virtual string s_BALFRCLC
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.BALFRCLC) ? string.Empty : base.GetshortAsString(ColumnNames.BALFRCLC);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.BALFRCLC);
				else
					this.BALFRCLC = base.SetshortAsString(ColumnNames.BALFRCLC, value);
			}
		}

		public virtual string s_CNVRMTHD
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.CNVRMTHD) ? string.Empty : base.GetshortAsString(ColumnNames.CNVRMTHD);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.CNVRMTHD);
				else
					this.CNVRMTHD = base.SetshortAsString(ColumnNames.CNVRMTHD, value);
			}
		}

		public virtual string s_HSTRCLRT
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.HSTRCLRT) ? string.Empty : base.GetdecimalAsString(ColumnNames.HSTRCLRT);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.HSTRCLRT);
				else
					this.HSTRCLRT = base.SetdecimalAsString(ColumnNames.HSTRCLRT, value);
			}
		}

		public virtual string s_NOTEINDX
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.NOTEINDX) ? string.Empty : base.GetdecimalAsString(ColumnNames.NOTEINDX);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.NOTEINDX);
				else
					this.NOTEINDX = base.SetdecimalAsString(ColumnNames.NOTEINDX, value);
			}
		}

		public virtual string s_CREATDDT
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.CREATDDT) ? string.Empty : base.GetDateTimeAsString(ColumnNames.CREATDDT);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.CREATDDT);
				else
					this.CREATDDT = base.SetDateTimeAsString(ColumnNames.CREATDDT, value);
			}
		}

		public virtual string s_MODIFDT
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.MODIFDT) ? string.Empty : base.GetDateTimeAsString(ColumnNames.MODIFDT);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.MODIFDT);
				else
					this.MODIFDT = base.SetDateTimeAsString(ColumnNames.MODIFDT, value);
			}
		}

		public virtual string s_USERDEF1
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.USERDEF1) ? string.Empty : base.GetstringAsString(ColumnNames.USERDEF1);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.USERDEF1);
				else
					this.USERDEF1 = base.SetstringAsString(ColumnNames.USERDEF1, value);
			}
		}

		public virtual string s_USERDEF2
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.USERDEF2) ? string.Empty : base.GetstringAsString(ColumnNames.USERDEF2);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.USERDEF2);
				else
					this.USERDEF2 = base.SetstringAsString(ColumnNames.USERDEF2, value);
			}
		}

		public virtual string s_PostSlsIn
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.PostSlsIn) ? string.Empty : base.GetshortAsString(ColumnNames.PostSlsIn);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.PostSlsIn);
				else
					this.PostSlsIn = base.SetshortAsString(ColumnNames.PostSlsIn, value);
			}
		}

		public virtual string s_PostIvIn
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.PostIvIn) ? string.Empty : base.GetshortAsString(ColumnNames.PostIvIn);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.PostIvIn);
				else
					this.PostIvIn = base.SetshortAsString(ColumnNames.PostIvIn, value);
			}
		}

		public virtual string s_PostPurchIn
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.PostPurchIn) ? string.Empty : base.GetshortAsString(ColumnNames.PostPurchIn);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.PostPurchIn);
				else
					this.PostPurchIn = base.SetshortAsString(ColumnNames.PostPurchIn, value);
			}
		}

		public virtual string s_PostPRIn
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.PostPRIn) ? string.Empty : base.GetshortAsString(ColumnNames.PostPRIn);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.PostPRIn);
				else
					this.PostPRIn = base.SetshortAsString(ColumnNames.PostPRIn, value);
			}
		}

		public virtual string s_ADJINFL
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.ADJINFL) ? string.Empty : base.GetbyteAsString(ColumnNames.ADJINFL);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.ADJINFL);
				else
					this.ADJINFL = base.SetbyteAsString(ColumnNames.ADJINFL, value);
			}
		}

		public virtual string s_INFLAREV
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.INFLAREV) ? string.Empty : base.GetintAsString(ColumnNames.INFLAREV);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.INFLAREV);
				else
					this.INFLAREV = base.SetintAsString(ColumnNames.INFLAREV, value);
			}
		}

		public virtual string s_INFLAEQU
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.INFLAEQU) ? string.Empty : base.GetintAsString(ColumnNames.INFLAEQU);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.INFLAEQU);
				else
					this.INFLAEQU = base.SetintAsString(ColumnNames.INFLAEQU, value);
			}
		}

		public virtual string s_ACCTENTR
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.ACCTENTR) ? string.Empty : base.GetbyteAsString(ColumnNames.ACCTENTR);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.ACCTENTR);
				else
					this.ACCTENTR = base.SetbyteAsString(ColumnNames.ACCTENTR, value);
			}
		}

		public virtual string s_USRDEFS1
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.USRDEFS1) ? string.Empty : base.GetstringAsString(ColumnNames.USRDEFS1);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.USRDEFS1);
				else
					this.USRDEFS1 = base.SetstringAsString(ColumnNames.USRDEFS1, value);
			}
		}

		public virtual string s_USRDEFS2
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.USRDEFS2) ? string.Empty : base.GetstringAsString(ColumnNames.USRDEFS2);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.USRDEFS2);
				else
					this.USRDEFS2 = base.SetstringAsString(ColumnNames.USRDEFS2, value);
			}
		}

		public virtual string s_DEX_ROW_TS
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.DEX_ROW_TS) ? string.Empty : base.GetDateTimeAsString(ColumnNames.DEX_ROW_TS);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.DEX_ROW_TS);
				else
					this.DEX_ROW_TS = base.SetDateTimeAsString(ColumnNames.DEX_ROW_TS, value);
			}
		}

		public virtual string s_DEX_ROW_ID
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.DEX_ROW_ID) ? string.Empty : base.GetintAsString(ColumnNames.DEX_ROW_ID);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.DEX_ROW_ID);
				else
					this.DEX_ROW_ID = base.SetintAsString(ColumnNames.DEX_ROW_ID, value);
			}
		}


		#endregion		
	
		#region Where Clause
		public class WhereClause
		{
			public WhereClause(BusinessEntity entity)
			{
				this._entity = entity;
			}
			
			public TearOffWhereParameter TearOff
			{
				get
				{
					if(_tearOff == null)
					{
						_tearOff = new TearOffWhereParameter(this);
					}

					return _tearOff;
				}
			}

			#region WhereParameter TearOff's
			public class TearOffWhereParameter
			{
				public TearOffWhereParameter(WhereClause clause)
				{
					this._clause = clause;
				}
				
				
				public WhereParameter ACTINDX
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.ACTINDX, Parameters.ACTINDX);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter ACTNUMBR_1
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.ACTNUMBR_1, Parameters.ACTNUMBR_1);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter ACTNUMBR_2
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.ACTNUMBR_2, Parameters.ACTNUMBR_2);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter ACTNUMBR_3
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.ACTNUMBR_3, Parameters.ACTNUMBR_3);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter ACTNUMBR_4
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.ACTNUMBR_4, Parameters.ACTNUMBR_4);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter ACTNUMBR_5
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.ACTNUMBR_5, Parameters.ACTNUMBR_5);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter ACTNUMBR_6
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.ACTNUMBR_6, Parameters.ACTNUMBR_6);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter ACTALIAS
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.ACTALIAS, Parameters.ACTALIAS);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter MNACSGMT
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.MNACSGMT, Parameters.MNACSGMT);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter ACCTTYPE
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.ACCTTYPE, Parameters.ACCTTYPE);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter ACTDESCR
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.ACTDESCR, Parameters.ACTDESCR);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter PSTNGTYP
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.PSTNGTYP, Parameters.PSTNGTYP);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter ACCATNUM
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.ACCATNUM, Parameters.ACCATNUM);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter ACTIVE
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.ACTIVE, Parameters.ACTIVE);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter TPCLBLNC
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.TPCLBLNC, Parameters.TPCLBLNC);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter DECPLACS
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.DECPLACS, Parameters.DECPLACS);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter FXDORVAR
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.FXDORVAR, Parameters.FXDORVAR);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter BALFRCLC
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.BALFRCLC, Parameters.BALFRCLC);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter DSPLKUPS
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.DSPLKUPS, Parameters.DSPLKUPS);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter CNVRMTHD
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.CNVRMTHD, Parameters.CNVRMTHD);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter HSTRCLRT
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.HSTRCLRT, Parameters.HSTRCLRT);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter NOTEINDX
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.NOTEINDX, Parameters.NOTEINDX);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter CREATDDT
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.CREATDDT, Parameters.CREATDDT);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter MODIFDT
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.MODIFDT, Parameters.MODIFDT);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter USERDEF1
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.USERDEF1, Parameters.USERDEF1);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter USERDEF2
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.USERDEF2, Parameters.USERDEF2);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter PostSlsIn
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.PostSlsIn, Parameters.PostSlsIn);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter PostIvIn
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.PostIvIn, Parameters.PostIvIn);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter PostPurchIn
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.PostPurchIn, Parameters.PostPurchIn);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter PostPRIn
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.PostPRIn, Parameters.PostPRIn);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter ADJINFL
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.ADJINFL, Parameters.ADJINFL);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter INFLAREV
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.INFLAREV, Parameters.INFLAREV);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter INFLAEQU
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.INFLAEQU, Parameters.INFLAEQU);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter ACCTENTR
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.ACCTENTR, Parameters.ACCTENTR);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter USRDEFS1
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.USRDEFS1, Parameters.USRDEFS1);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter USRDEFS2
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.USRDEFS2, Parameters.USRDEFS2);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter DEX_ROW_TS
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.DEX_ROW_TS, Parameters.DEX_ROW_TS);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter DEX_ROW_ID
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.DEX_ROW_ID, Parameters.DEX_ROW_ID);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}


				private WhereClause _clause;
			}
			#endregion
		
			public WhereParameter ACTINDX
		    {
				get
		        {
					if(_ACTINDX_W == null)
	        	    {
						_ACTINDX_W = TearOff.ACTINDX;
					}
					return _ACTINDX_W;
				}
			}

			public WhereParameter ACTNUMBR_1
		    {
				get
		        {
					if(_ACTNUMBR_1_W == null)
	        	    {
						_ACTNUMBR_1_W = TearOff.ACTNUMBR_1;
					}
					return _ACTNUMBR_1_W;
				}
			}

			public WhereParameter ACTNUMBR_2
		    {
				get
		        {
					if(_ACTNUMBR_2_W == null)
	        	    {
						_ACTNUMBR_2_W = TearOff.ACTNUMBR_2;
					}
					return _ACTNUMBR_2_W;
				}
			}

			public WhereParameter ACTNUMBR_3
		    {
				get
		        {
					if(_ACTNUMBR_3_W == null)
	        	    {
						_ACTNUMBR_3_W = TearOff.ACTNUMBR_3;
					}
					return _ACTNUMBR_3_W;
				}
			}

			public WhereParameter ACTNUMBR_4
		    {
				get
		        {
					if(_ACTNUMBR_4_W == null)
	        	    {
						_ACTNUMBR_4_W = TearOff.ACTNUMBR_4;
					}
					return _ACTNUMBR_4_W;
				}
			}

			public WhereParameter ACTNUMBR_5
		    {
				get
		        {
					if(_ACTNUMBR_5_W == null)
	        	    {
						_ACTNUMBR_5_W = TearOff.ACTNUMBR_5;
					}
					return _ACTNUMBR_5_W;
				}
			}

			public WhereParameter ACTNUMBR_6
		    {
				get
		        {
					if(_ACTNUMBR_6_W == null)
	        	    {
						_ACTNUMBR_6_W = TearOff.ACTNUMBR_6;
					}
					return _ACTNUMBR_6_W;
				}
			}

			public WhereParameter ACTALIAS
		    {
				get
		        {
					if(_ACTALIAS_W == null)
	        	    {
						_ACTALIAS_W = TearOff.ACTALIAS;
					}
					return _ACTALIAS_W;
				}
			}

			public WhereParameter MNACSGMT
		    {
				get
		        {
					if(_MNACSGMT_W == null)
	        	    {
						_MNACSGMT_W = TearOff.MNACSGMT;
					}
					return _MNACSGMT_W;
				}
			}

			public WhereParameter ACCTTYPE
		    {
				get
		        {
					if(_ACCTTYPE_W == null)
	        	    {
						_ACCTTYPE_W = TearOff.ACCTTYPE;
					}
					return _ACCTTYPE_W;
				}
			}

			public WhereParameter ACTDESCR
		    {
				get
		        {
					if(_ACTDESCR_W == null)
	        	    {
						_ACTDESCR_W = TearOff.ACTDESCR;
					}
					return _ACTDESCR_W;
				}
			}

			public WhereParameter PSTNGTYP
		    {
				get
		        {
					if(_PSTNGTYP_W == null)
	        	    {
						_PSTNGTYP_W = TearOff.PSTNGTYP;
					}
					return _PSTNGTYP_W;
				}
			}

			public WhereParameter ACCATNUM
		    {
				get
		        {
					if(_ACCATNUM_W == null)
	        	    {
						_ACCATNUM_W = TearOff.ACCATNUM;
					}
					return _ACCATNUM_W;
				}
			}

			public WhereParameter ACTIVE
		    {
				get
		        {
					if(_ACTIVE_W == null)
	        	    {
						_ACTIVE_W = TearOff.ACTIVE;
					}
					return _ACTIVE_W;
				}
			}

			public WhereParameter TPCLBLNC
		    {
				get
		        {
					if(_TPCLBLNC_W == null)
	        	    {
						_TPCLBLNC_W = TearOff.TPCLBLNC;
					}
					return _TPCLBLNC_W;
				}
			}

			public WhereParameter DECPLACS
		    {
				get
		        {
					if(_DECPLACS_W == null)
	        	    {
						_DECPLACS_W = TearOff.DECPLACS;
					}
					return _DECPLACS_W;
				}
			}

			public WhereParameter FXDORVAR
		    {
				get
		        {
					if(_FXDORVAR_W == null)
	        	    {
						_FXDORVAR_W = TearOff.FXDORVAR;
					}
					return _FXDORVAR_W;
				}
			}

			public WhereParameter BALFRCLC
		    {
				get
		        {
					if(_BALFRCLC_W == null)
	        	    {
						_BALFRCLC_W = TearOff.BALFRCLC;
					}
					return _BALFRCLC_W;
				}
			}

			public WhereParameter DSPLKUPS
		    {
				get
		        {
					if(_DSPLKUPS_W == null)
	        	    {
						_DSPLKUPS_W = TearOff.DSPLKUPS;
					}
					return _DSPLKUPS_W;
				}
			}

			public WhereParameter CNVRMTHD
		    {
				get
		        {
					if(_CNVRMTHD_W == null)
	        	    {
						_CNVRMTHD_W = TearOff.CNVRMTHD;
					}
					return _CNVRMTHD_W;
				}
			}

			public WhereParameter HSTRCLRT
		    {
				get
		        {
					if(_HSTRCLRT_W == null)
	        	    {
						_HSTRCLRT_W = TearOff.HSTRCLRT;
					}
					return _HSTRCLRT_W;
				}
			}

			public WhereParameter NOTEINDX
		    {
				get
		        {
					if(_NOTEINDX_W == null)
	        	    {
						_NOTEINDX_W = TearOff.NOTEINDX;
					}
					return _NOTEINDX_W;
				}
			}

			public WhereParameter CREATDDT
		    {
				get
		        {
					if(_CREATDDT_W == null)
	        	    {
						_CREATDDT_W = TearOff.CREATDDT;
					}
					return _CREATDDT_W;
				}
			}

			public WhereParameter MODIFDT
		    {
				get
		        {
					if(_MODIFDT_W == null)
	        	    {
						_MODIFDT_W = TearOff.MODIFDT;
					}
					return _MODIFDT_W;
				}
			}

			public WhereParameter USERDEF1
		    {
				get
		        {
					if(_USERDEF1_W == null)
	        	    {
						_USERDEF1_W = TearOff.USERDEF1;
					}
					return _USERDEF1_W;
				}
			}

			public WhereParameter USERDEF2
		    {
				get
		        {
					if(_USERDEF2_W == null)
	        	    {
						_USERDEF2_W = TearOff.USERDEF2;
					}
					return _USERDEF2_W;
				}
			}

			public WhereParameter PostSlsIn
		    {
				get
		        {
					if(_PostSlsIn_W == null)
	        	    {
						_PostSlsIn_W = TearOff.PostSlsIn;
					}
					return _PostSlsIn_W;
				}
			}

			public WhereParameter PostIvIn
		    {
				get
		        {
					if(_PostIvIn_W == null)
	        	    {
						_PostIvIn_W = TearOff.PostIvIn;
					}
					return _PostIvIn_W;
				}
			}

			public WhereParameter PostPurchIn
		    {
				get
		        {
					if(_PostPurchIn_W == null)
	        	    {
						_PostPurchIn_W = TearOff.PostPurchIn;
					}
					return _PostPurchIn_W;
				}
			}

			public WhereParameter PostPRIn
		    {
				get
		        {
					if(_PostPRIn_W == null)
	        	    {
						_PostPRIn_W = TearOff.PostPRIn;
					}
					return _PostPRIn_W;
				}
			}

			public WhereParameter ADJINFL
		    {
				get
		        {
					if(_ADJINFL_W == null)
	        	    {
						_ADJINFL_W = TearOff.ADJINFL;
					}
					return _ADJINFL_W;
				}
			}

			public WhereParameter INFLAREV
		    {
				get
		        {
					if(_INFLAREV_W == null)
	        	    {
						_INFLAREV_W = TearOff.INFLAREV;
					}
					return _INFLAREV_W;
				}
			}

			public WhereParameter INFLAEQU
		    {
				get
		        {
					if(_INFLAEQU_W == null)
	        	    {
						_INFLAEQU_W = TearOff.INFLAEQU;
					}
					return _INFLAEQU_W;
				}
			}

			public WhereParameter ACCTENTR
		    {
				get
		        {
					if(_ACCTENTR_W == null)
	        	    {
						_ACCTENTR_W = TearOff.ACCTENTR;
					}
					return _ACCTENTR_W;
				}
			}

			public WhereParameter USRDEFS1
		    {
				get
		        {
					if(_USRDEFS1_W == null)
	        	    {
						_USRDEFS1_W = TearOff.USRDEFS1;
					}
					return _USRDEFS1_W;
				}
			}

			public WhereParameter USRDEFS2
		    {
				get
		        {
					if(_USRDEFS2_W == null)
	        	    {
						_USRDEFS2_W = TearOff.USRDEFS2;
					}
					return _USRDEFS2_W;
				}
			}

			public WhereParameter DEX_ROW_TS
		    {
				get
		        {
					if(_DEX_ROW_TS_W == null)
	        	    {
						_DEX_ROW_TS_W = TearOff.DEX_ROW_TS;
					}
					return _DEX_ROW_TS_W;
				}
			}

			public WhereParameter DEX_ROW_ID
		    {
				get
		        {
					if(_DEX_ROW_ID_W == null)
	        	    {
						_DEX_ROW_ID_W = TearOff.DEX_ROW_ID;
					}
					return _DEX_ROW_ID_W;
				}
			}

			private WhereParameter _ACTINDX_W = null;
			private WhereParameter _ACTNUMBR_1_W = null;
			private WhereParameter _ACTNUMBR_2_W = null;
			private WhereParameter _ACTNUMBR_3_W = null;
			private WhereParameter _ACTNUMBR_4_W = null;
			private WhereParameter _ACTNUMBR_5_W = null;
			private WhereParameter _ACTNUMBR_6_W = null;
			private WhereParameter _ACTALIAS_W = null;
			private WhereParameter _MNACSGMT_W = null;
			private WhereParameter _ACCTTYPE_W = null;
			private WhereParameter _ACTDESCR_W = null;
			private WhereParameter _PSTNGTYP_W = null;
			private WhereParameter _ACCATNUM_W = null;
			private WhereParameter _ACTIVE_W = null;
			private WhereParameter _TPCLBLNC_W = null;
			private WhereParameter _DECPLACS_W = null;
			private WhereParameter _FXDORVAR_W = null;
			private WhereParameter _BALFRCLC_W = null;
			private WhereParameter _DSPLKUPS_W = null;
			private WhereParameter _CNVRMTHD_W = null;
			private WhereParameter _HSTRCLRT_W = null;
			private WhereParameter _NOTEINDX_W = null;
			private WhereParameter _CREATDDT_W = null;
			private WhereParameter _MODIFDT_W = null;
			private WhereParameter _USERDEF1_W = null;
			private WhereParameter _USERDEF2_W = null;
			private WhereParameter _PostSlsIn_W = null;
			private WhereParameter _PostIvIn_W = null;
			private WhereParameter _PostPurchIn_W = null;
			private WhereParameter _PostPRIn_W = null;
			private WhereParameter _ADJINFL_W = null;
			private WhereParameter _INFLAREV_W = null;
			private WhereParameter _INFLAEQU_W = null;
			private WhereParameter _ACCTENTR_W = null;
			private WhereParameter _USRDEFS1_W = null;
			private WhereParameter _USRDEFS2_W = null;
			private WhereParameter _DEX_ROW_TS_W = null;
			private WhereParameter _DEX_ROW_ID_W = null;

			public void WhereClauseReset()
			{
				_ACTINDX_W = null;
				_ACTNUMBR_1_W = null;
				_ACTNUMBR_2_W = null;
				_ACTNUMBR_3_W = null;
				_ACTNUMBR_4_W = null;
				_ACTNUMBR_5_W = null;
				_ACTNUMBR_6_W = null;
				_ACTALIAS_W = null;
				_MNACSGMT_W = null;
				_ACCTTYPE_W = null;
				_ACTDESCR_W = null;
				_PSTNGTYP_W = null;
				_ACCATNUM_W = null;
				_ACTIVE_W = null;
				_TPCLBLNC_W = null;
				_DECPLACS_W = null;
				_FXDORVAR_W = null;
				_BALFRCLC_W = null;
				_DSPLKUPS_W = null;
				_CNVRMTHD_W = null;
				_HSTRCLRT_W = null;
				_NOTEINDX_W = null;
				_CREATDDT_W = null;
				_MODIFDT_W = null;
				_USERDEF1_W = null;
				_USERDEF2_W = null;
				_PostSlsIn_W = null;
				_PostIvIn_W = null;
				_PostPurchIn_W = null;
				_PostPRIn_W = null;
				_ADJINFL_W = null;
				_INFLAREV_W = null;
				_INFLAEQU_W = null;
				_ACCTENTR_W = null;
				_USRDEFS1_W = null;
				_USRDEFS2_W = null;
				_DEX_ROW_TS_W = null;
				_DEX_ROW_ID_W = null;

				this._entity.Query.FlushWhereParameters();

			}
	
			private BusinessEntity _entity;
			private TearOffWhereParameter _tearOff;
			
		}
	
		public WhereClause Where
		{
			get
			{
				if(_whereClause == null)
				{
					_whereClause = new WhereClause(this);
				}
		
				return _whereClause;
			}
		}
		
		private WhereClause _whereClause = null;	
		#endregion
	
		#region Aggregate Clause
		public class AggregateClause
		{
			public AggregateClause(BusinessEntity entity)
			{
				this._entity = entity;
			}
			
			public TearOffAggregateParameter TearOff
			{
				get
				{
					if(_tearOff == null)
					{
						_tearOff = new TearOffAggregateParameter(this);
					}

					return _tearOff;
				}
			}

			#region AggregateParameter TearOff's
			public class TearOffAggregateParameter
			{
				public TearOffAggregateParameter(AggregateClause clause)
				{
					this._clause = clause;
				}
				
				
				public AggregateParameter ACTINDX
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.ACTINDX, Parameters.ACTINDX);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter ACTNUMBR_1
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.ACTNUMBR_1, Parameters.ACTNUMBR_1);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter ACTNUMBR_2
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.ACTNUMBR_2, Parameters.ACTNUMBR_2);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter ACTNUMBR_3
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.ACTNUMBR_3, Parameters.ACTNUMBR_3);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter ACTNUMBR_4
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.ACTNUMBR_4, Parameters.ACTNUMBR_4);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter ACTNUMBR_5
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.ACTNUMBR_5, Parameters.ACTNUMBR_5);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter ACTNUMBR_6
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.ACTNUMBR_6, Parameters.ACTNUMBR_6);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter ACTALIAS
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.ACTALIAS, Parameters.ACTALIAS);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter MNACSGMT
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.MNACSGMT, Parameters.MNACSGMT);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter ACCTTYPE
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.ACCTTYPE, Parameters.ACCTTYPE);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter ACTDESCR
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.ACTDESCR, Parameters.ACTDESCR);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter PSTNGTYP
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.PSTNGTYP, Parameters.PSTNGTYP);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter ACCATNUM
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.ACCATNUM, Parameters.ACCATNUM);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter ACTIVE
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.ACTIVE, Parameters.ACTIVE);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter TPCLBLNC
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.TPCLBLNC, Parameters.TPCLBLNC);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter DECPLACS
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.DECPLACS, Parameters.DECPLACS);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter FXDORVAR
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.FXDORVAR, Parameters.FXDORVAR);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter BALFRCLC
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.BALFRCLC, Parameters.BALFRCLC);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter DSPLKUPS
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.DSPLKUPS, Parameters.DSPLKUPS);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter CNVRMTHD
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.CNVRMTHD, Parameters.CNVRMTHD);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter HSTRCLRT
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.HSTRCLRT, Parameters.HSTRCLRT);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter NOTEINDX
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.NOTEINDX, Parameters.NOTEINDX);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter CREATDDT
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.CREATDDT, Parameters.CREATDDT);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter MODIFDT
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.MODIFDT, Parameters.MODIFDT);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter USERDEF1
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.USERDEF1, Parameters.USERDEF1);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter USERDEF2
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.USERDEF2, Parameters.USERDEF2);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter PostSlsIn
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.PostSlsIn, Parameters.PostSlsIn);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter PostIvIn
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.PostIvIn, Parameters.PostIvIn);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter PostPurchIn
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.PostPurchIn, Parameters.PostPurchIn);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter PostPRIn
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.PostPRIn, Parameters.PostPRIn);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter ADJINFL
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.ADJINFL, Parameters.ADJINFL);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter INFLAREV
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.INFLAREV, Parameters.INFLAREV);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter INFLAEQU
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.INFLAEQU, Parameters.INFLAEQU);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter ACCTENTR
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.ACCTENTR, Parameters.ACCTENTR);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter USRDEFS1
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.USRDEFS1, Parameters.USRDEFS1);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter USRDEFS2
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.USRDEFS2, Parameters.USRDEFS2);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter DEX_ROW_TS
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.DEX_ROW_TS, Parameters.DEX_ROW_TS);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter DEX_ROW_ID
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.DEX_ROW_ID, Parameters.DEX_ROW_ID);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}


				private AggregateClause _clause;
			}
			#endregion
		
			public AggregateParameter ACTINDX
		    {
				get
		        {
					if(_ACTINDX_W == null)
	        	    {
						_ACTINDX_W = TearOff.ACTINDX;
					}
					return _ACTINDX_W;
				}
			}

			public AggregateParameter ACTNUMBR_1
		    {
				get
		        {
					if(_ACTNUMBR_1_W == null)
	        	    {
						_ACTNUMBR_1_W = TearOff.ACTNUMBR_1;
					}
					return _ACTNUMBR_1_W;
				}
			}

			public AggregateParameter ACTNUMBR_2
		    {
				get
		        {
					if(_ACTNUMBR_2_W == null)
	        	    {
						_ACTNUMBR_2_W = TearOff.ACTNUMBR_2;
					}
					return _ACTNUMBR_2_W;
				}
			}

			public AggregateParameter ACTNUMBR_3
		    {
				get
		        {
					if(_ACTNUMBR_3_W == null)
	        	    {
						_ACTNUMBR_3_W = TearOff.ACTNUMBR_3;
					}
					return _ACTNUMBR_3_W;
				}
			}

			public AggregateParameter ACTNUMBR_4
		    {
				get
		        {
					if(_ACTNUMBR_4_W == null)
	        	    {
						_ACTNUMBR_4_W = TearOff.ACTNUMBR_4;
					}
					return _ACTNUMBR_4_W;
				}
			}

			public AggregateParameter ACTNUMBR_5
		    {
				get
		        {
					if(_ACTNUMBR_5_W == null)
	        	    {
						_ACTNUMBR_5_W = TearOff.ACTNUMBR_5;
					}
					return _ACTNUMBR_5_W;
				}
			}

			public AggregateParameter ACTNUMBR_6
		    {
				get
		        {
					if(_ACTNUMBR_6_W == null)
	        	    {
						_ACTNUMBR_6_W = TearOff.ACTNUMBR_6;
					}
					return _ACTNUMBR_6_W;
				}
			}

			public AggregateParameter ACTALIAS
		    {
				get
		        {
					if(_ACTALIAS_W == null)
	        	    {
						_ACTALIAS_W = TearOff.ACTALIAS;
					}
					return _ACTALIAS_W;
				}
			}

			public AggregateParameter MNACSGMT
		    {
				get
		        {
					if(_MNACSGMT_W == null)
	        	    {
						_MNACSGMT_W = TearOff.MNACSGMT;
					}
					return _MNACSGMT_W;
				}
			}

			public AggregateParameter ACCTTYPE
		    {
				get
		        {
					if(_ACCTTYPE_W == null)
	        	    {
						_ACCTTYPE_W = TearOff.ACCTTYPE;
					}
					return _ACCTTYPE_W;
				}
			}

			public AggregateParameter ACTDESCR
		    {
				get
		        {
					if(_ACTDESCR_W == null)
	        	    {
						_ACTDESCR_W = TearOff.ACTDESCR;
					}
					return _ACTDESCR_W;
				}
			}

			public AggregateParameter PSTNGTYP
		    {
				get
		        {
					if(_PSTNGTYP_W == null)
	        	    {
						_PSTNGTYP_W = TearOff.PSTNGTYP;
					}
					return _PSTNGTYP_W;
				}
			}

			public AggregateParameter ACCATNUM
		    {
				get
		        {
					if(_ACCATNUM_W == null)
	        	    {
						_ACCATNUM_W = TearOff.ACCATNUM;
					}
					return _ACCATNUM_W;
				}
			}

			public AggregateParameter ACTIVE
		    {
				get
		        {
					if(_ACTIVE_W == null)
	        	    {
						_ACTIVE_W = TearOff.ACTIVE;
					}
					return _ACTIVE_W;
				}
			}

			public AggregateParameter TPCLBLNC
		    {
				get
		        {
					if(_TPCLBLNC_W == null)
	        	    {
						_TPCLBLNC_W = TearOff.TPCLBLNC;
					}
					return _TPCLBLNC_W;
				}
			}

			public AggregateParameter DECPLACS
		    {
				get
		        {
					if(_DECPLACS_W == null)
	        	    {
						_DECPLACS_W = TearOff.DECPLACS;
					}
					return _DECPLACS_W;
				}
			}

			public AggregateParameter FXDORVAR
		    {
				get
		        {
					if(_FXDORVAR_W == null)
	        	    {
						_FXDORVAR_W = TearOff.FXDORVAR;
					}
					return _FXDORVAR_W;
				}
			}

			public AggregateParameter BALFRCLC
		    {
				get
		        {
					if(_BALFRCLC_W == null)
	        	    {
						_BALFRCLC_W = TearOff.BALFRCLC;
					}
					return _BALFRCLC_W;
				}
			}

			public AggregateParameter DSPLKUPS
		    {
				get
		        {
					if(_DSPLKUPS_W == null)
	        	    {
						_DSPLKUPS_W = TearOff.DSPLKUPS;
					}
					return _DSPLKUPS_W;
				}
			}

			public AggregateParameter CNVRMTHD
		    {
				get
		        {
					if(_CNVRMTHD_W == null)
	        	    {
						_CNVRMTHD_W = TearOff.CNVRMTHD;
					}
					return _CNVRMTHD_W;
				}
			}

			public AggregateParameter HSTRCLRT
		    {
				get
		        {
					if(_HSTRCLRT_W == null)
	        	    {
						_HSTRCLRT_W = TearOff.HSTRCLRT;
					}
					return _HSTRCLRT_W;
				}
			}

			public AggregateParameter NOTEINDX
		    {
				get
		        {
					if(_NOTEINDX_W == null)
	        	    {
						_NOTEINDX_W = TearOff.NOTEINDX;
					}
					return _NOTEINDX_W;
				}
			}

			public AggregateParameter CREATDDT
		    {
				get
		        {
					if(_CREATDDT_W == null)
	        	    {
						_CREATDDT_W = TearOff.CREATDDT;
					}
					return _CREATDDT_W;
				}
			}

			public AggregateParameter MODIFDT
		    {
				get
		        {
					if(_MODIFDT_W == null)
	        	    {
						_MODIFDT_W = TearOff.MODIFDT;
					}
					return _MODIFDT_W;
				}
			}

			public AggregateParameter USERDEF1
		    {
				get
		        {
					if(_USERDEF1_W == null)
	        	    {
						_USERDEF1_W = TearOff.USERDEF1;
					}
					return _USERDEF1_W;
				}
			}

			public AggregateParameter USERDEF2
		    {
				get
		        {
					if(_USERDEF2_W == null)
	        	    {
						_USERDEF2_W = TearOff.USERDEF2;
					}
					return _USERDEF2_W;
				}
			}

			public AggregateParameter PostSlsIn
		    {
				get
		        {
					if(_PostSlsIn_W == null)
	        	    {
						_PostSlsIn_W = TearOff.PostSlsIn;
					}
					return _PostSlsIn_W;
				}
			}

			public AggregateParameter PostIvIn
		    {
				get
		        {
					if(_PostIvIn_W == null)
	        	    {
						_PostIvIn_W = TearOff.PostIvIn;
					}
					return _PostIvIn_W;
				}
			}

			public AggregateParameter PostPurchIn
		    {
				get
		        {
					if(_PostPurchIn_W == null)
	        	    {
						_PostPurchIn_W = TearOff.PostPurchIn;
					}
					return _PostPurchIn_W;
				}
			}

			public AggregateParameter PostPRIn
		    {
				get
		        {
					if(_PostPRIn_W == null)
	        	    {
						_PostPRIn_W = TearOff.PostPRIn;
					}
					return _PostPRIn_W;
				}
			}

			public AggregateParameter ADJINFL
		    {
				get
		        {
					if(_ADJINFL_W == null)
	        	    {
						_ADJINFL_W = TearOff.ADJINFL;
					}
					return _ADJINFL_W;
				}
			}

			public AggregateParameter INFLAREV
		    {
				get
		        {
					if(_INFLAREV_W == null)
	        	    {
						_INFLAREV_W = TearOff.INFLAREV;
					}
					return _INFLAREV_W;
				}
			}

			public AggregateParameter INFLAEQU
		    {
				get
		        {
					if(_INFLAEQU_W == null)
	        	    {
						_INFLAEQU_W = TearOff.INFLAEQU;
					}
					return _INFLAEQU_W;
				}
			}

			public AggregateParameter ACCTENTR
		    {
				get
		        {
					if(_ACCTENTR_W == null)
	        	    {
						_ACCTENTR_W = TearOff.ACCTENTR;
					}
					return _ACCTENTR_W;
				}
			}

			public AggregateParameter USRDEFS1
		    {
				get
		        {
					if(_USRDEFS1_W == null)
	        	    {
						_USRDEFS1_W = TearOff.USRDEFS1;
					}
					return _USRDEFS1_W;
				}
			}

			public AggregateParameter USRDEFS2
		    {
				get
		        {
					if(_USRDEFS2_W == null)
	        	    {
						_USRDEFS2_W = TearOff.USRDEFS2;
					}
					return _USRDEFS2_W;
				}
			}

			public AggregateParameter DEX_ROW_TS
		    {
				get
		        {
					if(_DEX_ROW_TS_W == null)
	        	    {
						_DEX_ROW_TS_W = TearOff.DEX_ROW_TS;
					}
					return _DEX_ROW_TS_W;
				}
			}

			public AggregateParameter DEX_ROW_ID
		    {
				get
		        {
					if(_DEX_ROW_ID_W == null)
	        	    {
						_DEX_ROW_ID_W = TearOff.DEX_ROW_ID;
					}
					return _DEX_ROW_ID_W;
				}
			}

			private AggregateParameter _ACTINDX_W = null;
			private AggregateParameter _ACTNUMBR_1_W = null;
			private AggregateParameter _ACTNUMBR_2_W = null;
			private AggregateParameter _ACTNUMBR_3_W = null;
			private AggregateParameter _ACTNUMBR_4_W = null;
			private AggregateParameter _ACTNUMBR_5_W = null;
			private AggregateParameter _ACTNUMBR_6_W = null;
			private AggregateParameter _ACTALIAS_W = null;
			private AggregateParameter _MNACSGMT_W = null;
			private AggregateParameter _ACCTTYPE_W = null;
			private AggregateParameter _ACTDESCR_W = null;
			private AggregateParameter _PSTNGTYP_W = null;
			private AggregateParameter _ACCATNUM_W = null;
			private AggregateParameter _ACTIVE_W = null;
			private AggregateParameter _TPCLBLNC_W = null;
			private AggregateParameter _DECPLACS_W = null;
			private AggregateParameter _FXDORVAR_W = null;
			private AggregateParameter _BALFRCLC_W = null;
			private AggregateParameter _DSPLKUPS_W = null;
			private AggregateParameter _CNVRMTHD_W = null;
			private AggregateParameter _HSTRCLRT_W = null;
			private AggregateParameter _NOTEINDX_W = null;
			private AggregateParameter _CREATDDT_W = null;
			private AggregateParameter _MODIFDT_W = null;
			private AggregateParameter _USERDEF1_W = null;
			private AggregateParameter _USERDEF2_W = null;
			private AggregateParameter _PostSlsIn_W = null;
			private AggregateParameter _PostIvIn_W = null;
			private AggregateParameter _PostPurchIn_W = null;
			private AggregateParameter _PostPRIn_W = null;
			private AggregateParameter _ADJINFL_W = null;
			private AggregateParameter _INFLAREV_W = null;
			private AggregateParameter _INFLAEQU_W = null;
			private AggregateParameter _ACCTENTR_W = null;
			private AggregateParameter _USRDEFS1_W = null;
			private AggregateParameter _USRDEFS2_W = null;
			private AggregateParameter _DEX_ROW_TS_W = null;
			private AggregateParameter _DEX_ROW_ID_W = null;

			public void AggregateClauseReset()
			{
				_ACTINDX_W = null;
				_ACTNUMBR_1_W = null;
				_ACTNUMBR_2_W = null;
				_ACTNUMBR_3_W = null;
				_ACTNUMBR_4_W = null;
				_ACTNUMBR_5_W = null;
				_ACTNUMBR_6_W = null;
				_ACTALIAS_W = null;
				_MNACSGMT_W = null;
				_ACCTTYPE_W = null;
				_ACTDESCR_W = null;
				_PSTNGTYP_W = null;
				_ACCATNUM_W = null;
				_ACTIVE_W = null;
				_TPCLBLNC_W = null;
				_DECPLACS_W = null;
				_FXDORVAR_W = null;
				_BALFRCLC_W = null;
				_DSPLKUPS_W = null;
				_CNVRMTHD_W = null;
				_HSTRCLRT_W = null;
				_NOTEINDX_W = null;
				_CREATDDT_W = null;
				_MODIFDT_W = null;
				_USERDEF1_W = null;
				_USERDEF2_W = null;
				_PostSlsIn_W = null;
				_PostIvIn_W = null;
				_PostPurchIn_W = null;
				_PostPRIn_W = null;
				_ADJINFL_W = null;
				_INFLAREV_W = null;
				_INFLAEQU_W = null;
				_ACCTENTR_W = null;
				_USRDEFS1_W = null;
				_USRDEFS2_W = null;
				_DEX_ROW_TS_W = null;
				_DEX_ROW_ID_W = null;

				this._entity.Query.FlushAggregateParameters();

			}
	
			private BusinessEntity _entity;
			private TearOffAggregateParameter _tearOff;
			
		}
	
		public AggregateClause Aggregate
		{
			get
			{
				if(_aggregateClause == null)
				{
					_aggregateClause = new AggregateClause(this);
				}
		
				return _aggregateClause;
			}
		}
		
		private AggregateClause _aggregateClause = null;	
		#endregion
	
		protected override IDbCommand GetInsertCommand() 
		{
		
			SqlCommand cmd = new SqlCommand();
			cmd.CommandType = CommandType.StoredProcedure;
			cmd.CommandText = "[" + this.SchemaStoredProcedure + "proc_GL00100Insert]";
	
			CreateParameters(cmd);
			
			SqlParameter p;
			p = cmd.Parameters[Parameters.DEX_ROW_ID.ParameterName];
			p.Direction = ParameterDirection.Output;
    
			return cmd;
		}
	
		protected override IDbCommand GetUpdateCommand()
		{
		
			SqlCommand cmd = new SqlCommand();
			cmd.CommandType = CommandType.StoredProcedure;
			cmd.CommandText = "[" + this.SchemaStoredProcedure + "proc_GL00100Update]";
	
			CreateParameters(cmd);
			      
			return cmd;
		}
	
		protected override IDbCommand GetDeleteCommand()
		{
		
			SqlCommand cmd = new SqlCommand();
			cmd.CommandType = CommandType.StoredProcedure;
			cmd.CommandText = "[" + this.SchemaStoredProcedure + "proc_GL00100Delete]";
	
			SqlParameter p;
			p = cmd.Parameters.Add(Parameters.ACTINDX);
			p.SourceColumn = ColumnNames.ACTINDX;
			p.SourceVersion = DataRowVersion.Current;

  
			return cmd;
		}
		
		private IDbCommand CreateParameters(SqlCommand cmd)
		{
			SqlParameter p;
		
			p = cmd.Parameters.Add(Parameters.ACTINDX);
			p.SourceColumn = ColumnNames.ACTINDX;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.ACTNUMBR_1);
			p.SourceColumn = ColumnNames.ACTNUMBR_1;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.ACTNUMBR_2);
			p.SourceColumn = ColumnNames.ACTNUMBR_2;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.ACTNUMBR_3);
			p.SourceColumn = ColumnNames.ACTNUMBR_3;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.ACTNUMBR_4);
			p.SourceColumn = ColumnNames.ACTNUMBR_4;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.ACTNUMBR_5);
			p.SourceColumn = ColumnNames.ACTNUMBR_5;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.ACTNUMBR_6);
			p.SourceColumn = ColumnNames.ACTNUMBR_6;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.ACTALIAS);
			p.SourceColumn = ColumnNames.ACTALIAS;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.MNACSGMT);
			p.SourceColumn = ColumnNames.MNACSGMT;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.ACCTTYPE);
			p.SourceColumn = ColumnNames.ACCTTYPE;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.ACTDESCR);
			p.SourceColumn = ColumnNames.ACTDESCR;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.PSTNGTYP);
			p.SourceColumn = ColumnNames.PSTNGTYP;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.ACCATNUM);
			p.SourceColumn = ColumnNames.ACCATNUM;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.ACTIVE);
			p.SourceColumn = ColumnNames.ACTIVE;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.TPCLBLNC);
			p.SourceColumn = ColumnNames.TPCLBLNC;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.DECPLACS);
			p.SourceColumn = ColumnNames.DECPLACS;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.FXDORVAR);
			p.SourceColumn = ColumnNames.FXDORVAR;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.BALFRCLC);
			p.SourceColumn = ColumnNames.BALFRCLC;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.DSPLKUPS);
			p.SourceColumn = ColumnNames.DSPLKUPS;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.CNVRMTHD);
			p.SourceColumn = ColumnNames.CNVRMTHD;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.HSTRCLRT);
			p.SourceColumn = ColumnNames.HSTRCLRT;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.NOTEINDX);
			p.SourceColumn = ColumnNames.NOTEINDX;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.CREATDDT);
			p.SourceColumn = ColumnNames.CREATDDT;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.MODIFDT);
			p.SourceColumn = ColumnNames.MODIFDT;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.USERDEF1);
			p.SourceColumn = ColumnNames.USERDEF1;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.USERDEF2);
			p.SourceColumn = ColumnNames.USERDEF2;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.PostSlsIn);
			p.SourceColumn = ColumnNames.PostSlsIn;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.PostIvIn);
			p.SourceColumn = ColumnNames.PostIvIn;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.PostPurchIn);
			p.SourceColumn = ColumnNames.PostPurchIn;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.PostPRIn);
			p.SourceColumn = ColumnNames.PostPRIn;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.ADJINFL);
			p.SourceColumn = ColumnNames.ADJINFL;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.INFLAREV);
			p.SourceColumn = ColumnNames.INFLAREV;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.INFLAEQU);
			p.SourceColumn = ColumnNames.INFLAEQU;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.ACCTENTR);
			p.SourceColumn = ColumnNames.ACCTENTR;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.USRDEFS1);
			p.SourceColumn = ColumnNames.USRDEFS1;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.USRDEFS2);
			p.SourceColumn = ColumnNames.USRDEFS2;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.DEX_ROW_TS);
			p.SourceColumn = ColumnNames.DEX_ROW_TS;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.DEX_ROW_ID);
			p.SourceColumn = ColumnNames.DEX_ROW_ID;
			p.SourceVersion = DataRowVersion.Current;


			return cmd;
		}
	}
}
